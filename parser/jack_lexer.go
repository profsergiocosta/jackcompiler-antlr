// Generated from Jack.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 48, 310,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 3, 2, 3, 2, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20,
	3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24,
	3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28,
	3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3,
	30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31,
	3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3,
	33, 3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35,
	3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3,
	37, 3, 37, 3, 37, 3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39,
	3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3,
	40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 42, 5, 42, 257,
	10, 42, 3, 42, 7, 42, 260, 10, 42, 12, 42, 14, 42, 263, 11, 42, 3, 43,
	3, 43, 7, 43, 267, 10, 43, 12, 43, 14, 43, 270, 11, 43, 3, 43, 3, 43, 3,
	44, 6, 44, 275, 10, 44, 13, 44, 14, 44, 276, 3, 45, 3, 45, 3, 45, 3, 45,
	7, 45, 283, 10, 45, 12, 45, 14, 45, 286, 11, 45, 3, 45, 3, 45, 3, 45, 3,
	45, 3, 45, 3, 46, 3, 46, 3, 46, 3, 46, 7, 46, 297, 10, 46, 12, 46, 14,
	46, 300, 11, 46, 3, 46, 3, 46, 3, 47, 6, 47, 305, 10, 47, 13, 47, 14, 47,
	306, 3, 47, 3, 47, 4, 268, 284, 2, 48, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13,
	8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44,
	87, 45, 89, 46, 91, 47, 93, 48, 3, 2, 7, 4, 2, 67, 92, 99, 124, 5, 2, 50,
	59, 67, 92, 99, 124, 3, 2, 50, 59, 4, 2, 12, 12, 15, 15, 5, 2, 11, 12,
	15, 15, 34, 34, 2, 315, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2,
	2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3,
	2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23,
	3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2,
	31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2,
	2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2,
	2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2,
	2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3,
	2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69,
	3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2,
	77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2,
	2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2,
	2, 2, 93, 3, 2, 2, 2, 3, 95, 3, 2, 2, 2, 5, 97, 3, 2, 2, 2, 7, 99, 3, 2,
	2, 2, 9, 101, 3, 2, 2, 2, 11, 103, 3, 2, 2, 2, 13, 105, 3, 2, 2, 2, 15,
	107, 3, 2, 2, 2, 17, 109, 3, 2, 2, 2, 19, 111, 3, 2, 2, 2, 21, 113, 3,
	2, 2, 2, 23, 115, 3, 2, 2, 2, 25, 117, 3, 2, 2, 2, 27, 119, 3, 2, 2, 2,
	29, 121, 3, 2, 2, 2, 31, 123, 3, 2, 2, 2, 33, 125, 3, 2, 2, 2, 35, 127,
	3, 2, 2, 2, 37, 129, 3, 2, 2, 2, 39, 131, 3, 2, 2, 2, 41, 133, 3, 2, 2,
	2, 43, 140, 3, 2, 2, 2, 45, 147, 3, 2, 2, 2, 47, 151, 3, 2, 2, 2, 49, 159,
	3, 2, 2, 2, 51, 164, 3, 2, 2, 2, 53, 169, 3, 2, 2, 2, 55, 173, 3, 2, 2,
	2, 57, 176, 3, 2, 2, 2, 59, 182, 3, 2, 2, 2, 61, 194, 3, 2, 2, 2, 63, 200,
	3, 2, 2, 2, 65, 204, 3, 2, 2, 2, 67, 209, 3, 2, 2, 2, 69, 214, 3, 2, 2,
	2, 71, 220, 3, 2, 2, 2, 73, 226, 3, 2, 2, 2, 75, 229, 3, 2, 2, 2, 77, 234,
	3, 2, 2, 2, 79, 241, 3, 2, 2, 2, 81, 250, 3, 2, 2, 2, 83, 256, 3, 2, 2,
	2, 85, 264, 3, 2, 2, 2, 87, 274, 3, 2, 2, 2, 89, 278, 3, 2, 2, 2, 91, 292,
	3, 2, 2, 2, 93, 304, 3, 2, 2, 2, 95, 96, 7, 45, 2, 2, 96, 4, 3, 2, 2, 2,
	97, 98, 7, 47, 2, 2, 98, 6, 3, 2, 2, 2, 99, 100, 7, 44, 2, 2, 100, 8, 3,
	2, 2, 2, 101, 102, 7, 49, 2, 2, 102, 10, 3, 2, 2, 2, 103, 104, 7, 40, 2,
	2, 104, 12, 3, 2, 2, 2, 105, 106, 7, 126, 2, 2, 106, 14, 3, 2, 2, 2, 107,
	108, 7, 128, 2, 2, 108, 16, 3, 2, 2, 2, 109, 110, 7, 62, 2, 2, 110, 18,
	3, 2, 2, 2, 111, 112, 7, 64, 2, 2, 112, 20, 3, 2, 2, 2, 113, 114, 7, 63,
	2, 2, 114, 22, 3, 2, 2, 2, 115, 116, 7, 48, 2, 2, 116, 24, 3, 2, 2, 2,
	117, 118, 7, 46, 2, 2, 118, 26, 3, 2, 2, 2, 119, 120, 7, 61, 2, 2, 120,
	28, 3, 2, 2, 2, 121, 122, 7, 42, 2, 2, 122, 30, 3, 2, 2, 2, 123, 124, 7,
	43, 2, 2, 124, 32, 3, 2, 2, 2, 125, 126, 7, 125, 2, 2, 126, 34, 3, 2, 2,
	2, 127, 128, 7, 127, 2, 2, 128, 36, 3, 2, 2, 2, 129, 130, 7, 93, 2, 2,
	130, 38, 3, 2, 2, 2, 131, 132, 7, 95, 2, 2, 132, 40, 3, 2, 2, 2, 133, 134,
	7, 111, 2, 2, 134, 135, 7, 103, 2, 2, 135, 136, 7, 118, 2, 2, 136, 137,
	7, 106, 2, 2, 137, 138, 7, 113, 2, 2, 138, 139, 7, 102, 2, 2, 139, 42,
	3, 2, 2, 2, 140, 141, 7, 117, 2, 2, 141, 142, 7, 118, 2, 2, 142, 143, 7,
	99, 2, 2, 143, 144, 7, 118, 2, 2, 144, 145, 7, 107, 2, 2, 145, 146, 7,
	101, 2, 2, 146, 44, 3, 2, 2, 2, 147, 148, 7, 107, 2, 2, 148, 149, 7, 112,
	2, 2, 149, 150, 7, 118, 2, 2, 150, 46, 3, 2, 2, 2, 151, 152, 7, 100, 2,
	2, 152, 153, 7, 113, 2, 2, 153, 154, 7, 113, 2, 2, 154, 155, 7, 110, 2,
	2, 155, 156, 7, 103, 2, 2, 156, 157, 7, 99, 2, 2, 157, 158, 7, 112, 2,
	2, 158, 48, 3, 2, 2, 2, 159, 160, 7, 118, 2, 2, 160, 161, 7, 116, 2, 2,
	161, 162, 7, 119, 2, 2, 162, 163, 7, 103, 2, 2, 163, 50, 3, 2, 2, 2, 164,
	165, 7, 112, 2, 2, 165, 166, 7, 119, 2, 2, 166, 167, 7, 110, 2, 2, 167,
	168, 7, 110, 2, 2, 168, 52, 3, 2, 2, 2, 169, 170, 7, 110, 2, 2, 170, 171,
	7, 103, 2, 2, 171, 172, 7, 118, 2, 2, 172, 54, 3, 2, 2, 2, 173, 174, 7,
	107, 2, 2, 174, 175, 7, 104, 2, 2, 175, 56, 3, 2, 2, 2, 176, 177, 7, 121,
	2, 2, 177, 178, 7, 106, 2, 2, 178, 179, 7, 107, 2, 2, 179, 180, 7, 110,
	2, 2, 180, 181, 7, 103, 2, 2, 181, 58, 3, 2, 2, 2, 182, 183, 7, 101, 2,
	2, 183, 184, 7, 113, 2, 2, 184, 185, 7, 112, 2, 2, 185, 186, 7, 117, 2,
	2, 186, 187, 7, 118, 2, 2, 187, 188, 7, 116, 2, 2, 188, 189, 7, 119, 2,
	2, 189, 190, 7, 101, 2, 2, 190, 191, 7, 118, 2, 2, 191, 192, 7, 113, 2,
	2, 192, 193, 7, 116, 2, 2, 193, 60, 3, 2, 2, 2, 194, 195, 7, 104, 2, 2,
	195, 196, 7, 107, 2, 2, 196, 197, 7, 103, 2, 2, 197, 198, 7, 110, 2, 2,
	198, 199, 7, 102, 2, 2, 199, 62, 3, 2, 2, 2, 200, 201, 7, 120, 2, 2, 201,
	202, 7, 99, 2, 2, 202, 203, 7, 116, 2, 2, 203, 64, 3, 2, 2, 2, 204, 205,
	7, 101, 2, 2, 205, 206, 7, 106, 2, 2, 206, 207, 7, 99, 2, 2, 207, 208,
	7, 116, 2, 2, 208, 66, 3, 2, 2, 2, 209, 210, 7, 120, 2, 2, 210, 211, 7,
	113, 2, 2, 211, 212, 7, 107, 2, 2, 212, 213, 7, 102, 2, 2, 213, 68, 3,
	2, 2, 2, 214, 215, 7, 101, 2, 2, 215, 216, 7, 110, 2, 2, 216, 217, 7, 99,
	2, 2, 217, 218, 7, 117, 2, 2, 218, 219, 7, 117, 2, 2, 219, 70, 3, 2, 2,
	2, 220, 221, 7, 104, 2, 2, 221, 222, 7, 99, 2, 2, 222, 223, 7, 110, 2,
	2, 223, 224, 7, 117, 2, 2, 224, 225, 7, 103, 2, 2, 225, 72, 3, 2, 2, 2,
	226, 227, 7, 102, 2, 2, 227, 228, 7, 113, 2, 2, 228, 74, 3, 2, 2, 2, 229,
	230, 7, 103, 2, 2, 230, 231, 7, 110, 2, 2, 231, 232, 7, 117, 2, 2, 232,
	233, 7, 103, 2, 2, 233, 76, 3, 2, 2, 2, 234, 235, 7, 116, 2, 2, 235, 236,
	7, 103, 2, 2, 236, 237, 7, 118, 2, 2, 237, 238, 7, 119, 2, 2, 238, 239,
	7, 116, 2, 2, 239, 240, 7, 112, 2, 2, 240, 78, 3, 2, 2, 2, 241, 242, 7,
	104, 2, 2, 242, 243, 7, 119, 2, 2, 243, 244, 7, 112, 2, 2, 244, 245, 7,
	101, 2, 2, 245, 246, 7, 118, 2, 2, 246, 247, 7, 107, 2, 2, 247, 248, 7,
	113, 2, 2, 248, 249, 7, 112, 2, 2, 249, 80, 3, 2, 2, 2, 250, 251, 7, 118,
	2, 2, 251, 252, 7, 106, 2, 2, 252, 253, 7, 107, 2, 2, 253, 254, 7, 117,
	2, 2, 254, 82, 3, 2, 2, 2, 255, 257, 9, 2, 2, 2, 256, 255, 3, 2, 2, 2,
	257, 261, 3, 2, 2, 2, 258, 260, 9, 3, 2, 2, 259, 258, 3, 2, 2, 2, 260,
	263, 3, 2, 2, 2, 261, 259, 3, 2, 2, 2, 261, 262, 3, 2, 2, 2, 262, 84, 3,
	2, 2, 2, 263, 261, 3, 2, 2, 2, 264, 268, 7, 36, 2, 2, 265, 267, 11, 2,
	2, 2, 266, 265, 3, 2, 2, 2, 267, 270, 3, 2, 2, 2, 268, 269, 3, 2, 2, 2,
	268, 266, 3, 2, 2, 2, 269, 271, 3, 2, 2, 2, 270, 268, 3, 2, 2, 2, 271,
	272, 7, 36, 2, 2, 272, 86, 3, 2, 2, 2, 273, 275, 9, 4, 2, 2, 274, 273,
	3, 2, 2, 2, 275, 276, 3, 2, 2, 2, 276, 274, 3, 2, 2, 2, 276, 277, 3, 2,
	2, 2, 277, 88, 3, 2, 2, 2, 278, 279, 7, 49, 2, 2, 279, 280, 7, 44, 2, 2,
	280, 284, 3, 2, 2, 2, 281, 283, 11, 2, 2, 2, 282, 281, 3, 2, 2, 2, 283,
	286, 3, 2, 2, 2, 284, 285, 3, 2, 2, 2, 284, 282, 3, 2, 2, 2, 285, 287,
	3, 2, 2, 2, 286, 284, 3, 2, 2, 2, 287, 288, 7, 44, 2, 2, 288, 289, 7, 49,
	2, 2, 289, 290, 3, 2, 2, 2, 290, 291, 8, 45, 2, 2, 291, 90, 3, 2, 2, 2,
	292, 293, 7, 49, 2, 2, 293, 294, 7, 49, 2, 2, 294, 298, 3, 2, 2, 2, 295,
	297, 10, 5, 2, 2, 296, 295, 3, 2, 2, 2, 297, 300, 3, 2, 2, 2, 298, 296,
	3, 2, 2, 2, 298, 299, 3, 2, 2, 2, 299, 301, 3, 2, 2, 2, 300, 298, 3, 2,
	2, 2, 301, 302, 8, 46, 2, 2, 302, 92, 3, 2, 2, 2, 303, 305, 9, 6, 2, 2,
	304, 303, 3, 2, 2, 2, 305, 306, 3, 2, 2, 2, 306, 304, 3, 2, 2, 2, 306,
	307, 3, 2, 2, 2, 307, 308, 3, 2, 2, 2, 308, 309, 8, 47, 2, 2, 309, 94,
	3, 2, 2, 2, 11, 2, 256, 259, 261, 268, 276, 284, 298, 306, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'+'", "'-'", "'*'", "'/'", "'&'", "'|'", "'~'", "'<'", "'>'", "'='",
	"'.'", "','", "';'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'method'",
	"'static'", "'int'", "'boolean'", "'true'", "'null'", "'let'", "'if'",
	"'while'", "'constructor'", "'field'", "'var'", "'char'", "'void'", "'class'",
	"'false'", "'do'", "'else'", "'return'", "'function'", "'this'",
}

var lexerSymbolicNames = []string{
	"", "PLUS", "MINUS", "ASTERISK", "SLASH", "AND", "OR", "NOT", "LT", "GT",
	"EQ", "DOT", "COMMA", "SEMICOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE",
	"LBRACKET", "RBRACKET", "METHOD", "STATIC", "INT", "BOOLEAN", "TRUE", "NULL",
	"LET", "IF", "WHILE", "CONSTRUCTOR", "FIELD", "VAR", "CHAR", "VOID", "CLASS",
	"FALSE", "DO", "ELSE", "RETURN", "FUNCTION", "THIS", "ID", "STRING", "INTEGER",
	"COMMENT", "LINE_COMMENT", "WHITESPACE",
}

var lexerRuleNames = []string{
	"PLUS", "MINUS", "ASTERISK", "SLASH", "AND", "OR", "NOT", "LT", "GT", "EQ",
	"DOT", "COMMA", "SEMICOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET",
	"RBRACKET", "METHOD", "STATIC", "INT", "BOOLEAN", "TRUE", "NULL", "LET",
	"IF", "WHILE", "CONSTRUCTOR", "FIELD", "VAR", "CHAR", "VOID", "CLASS",
	"FALSE", "DO", "ELSE", "RETURN", "FUNCTION", "THIS", "ID", "STRING", "INTEGER",
	"COMMENT", "LINE_COMMENT", "WHITESPACE",
}

type JackLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewJackLexer(input antlr.CharStream) *JackLexer {

	l := new(JackLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Jack.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JackLexer tokens.
const (
	JackLexerPLUS         = 1
	JackLexerMINUS        = 2
	JackLexerASTERISK     = 3
	JackLexerSLASH        = 4
	JackLexerAND          = 5
	JackLexerOR           = 6
	JackLexerNOT          = 7
	JackLexerLT           = 8
	JackLexerGT           = 9
	JackLexerEQ           = 10
	JackLexerDOT          = 11
	JackLexerCOMMA        = 12
	JackLexerSEMICOLON    = 13
	JackLexerLPAREN       = 14
	JackLexerRPAREN       = 15
	JackLexerLBRACE       = 16
	JackLexerRBRACE       = 17
	JackLexerLBRACKET     = 18
	JackLexerRBRACKET     = 19
	JackLexerMETHOD       = 20
	JackLexerSTATIC       = 21
	JackLexerINT          = 22
	JackLexerBOOLEAN      = 23
	JackLexerTRUE         = 24
	JackLexerNULL         = 25
	JackLexerLET          = 26
	JackLexerIF           = 27
	JackLexerWHILE        = 28
	JackLexerCONSTRUCTOR  = 29
	JackLexerFIELD        = 30
	JackLexerVAR          = 31
	JackLexerCHAR         = 32
	JackLexerVOID         = 33
	JackLexerCLASS        = 34
	JackLexerFALSE        = 35
	JackLexerDO           = 36
	JackLexerELSE         = 37
	JackLexerRETURN       = 38
	JackLexerFUNCTION     = 39
	JackLexerTHIS         = 40
	JackLexerID           = 41
	JackLexerSTRING       = 42
	JackLexerINTEGER      = 43
	JackLexerCOMMENT      = 44
	JackLexerLINE_COMMENT = 45
	JackLexerWHITESPACE   = 46
)
