// Generated from Jack.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 47, 286,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 3, 2, 5, 2, 95, 10, 2, 3, 2, 7, 2, 98,
	10, 2, 12, 2, 14, 2, 101, 11, 2, 3, 3, 3, 3, 7, 3, 105, 10, 3, 12, 3, 14,
	3, 108, 11, 3, 3, 3, 3, 3, 3, 4, 6, 4, 113, 10, 4, 13, 4, 14, 4, 114, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3,
	15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20,
	3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3,
	25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26,
	3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3,
	28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30,
	3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 33, 3,
	33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34,
	3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3,
	35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37,
	3, 38, 3, 38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3,
	39, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 42,
	3, 42, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3,
	43, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 44, 3, 45,
	3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 6, 46, 281, 10, 46, 13, 46, 14, 46,
	282, 3, 46, 3, 46, 3, 106, 2, 47, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8,
	15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35,
	69, 36, 71, 37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44,
	87, 45, 89, 46, 91, 47, 3, 2, 6, 4, 2, 67, 92, 99, 124, 5, 2, 50, 59, 67,
	92, 99, 124, 3, 2, 50, 59, 5, 2, 11, 12, 15, 15, 34, 34, 2, 289, 2, 3,
	3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11,
	3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2,
	19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2,
	2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2,
	2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2,
	2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3,
	2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57,
	3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2,
	65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2,
	2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2,
	2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2,
	2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 3, 94, 3, 2, 2, 2, 5, 102,
	3, 2, 2, 2, 7, 112, 3, 2, 2, 2, 9, 116, 3, 2, 2, 2, 11, 118, 3, 2, 2, 2,
	13, 120, 3, 2, 2, 2, 15, 122, 3, 2, 2, 2, 17, 124, 3, 2, 2, 2, 19, 126,
	3, 2, 2, 2, 21, 128, 3, 2, 2, 2, 23, 130, 3, 2, 2, 2, 25, 132, 3, 2, 2,
	2, 27, 134, 3, 2, 2, 2, 29, 136, 3, 2, 2, 2, 31, 139, 3, 2, 2, 2, 33, 141,
	3, 2, 2, 2, 35, 143, 3, 2, 2, 2, 37, 145, 3, 2, 2, 2, 39, 147, 3, 2, 2,
	2, 41, 149, 3, 2, 2, 2, 43, 151, 3, 2, 2, 2, 45, 153, 3, 2, 2, 2, 47, 155,
	3, 2, 2, 2, 49, 157, 3, 2, 2, 2, 51, 164, 3, 2, 2, 2, 53, 171, 3, 2, 2,
	2, 55, 175, 3, 2, 2, 2, 57, 183, 3, 2, 2, 2, 59, 188, 3, 2, 2, 2, 61, 193,
	3, 2, 2, 2, 63, 197, 3, 2, 2, 2, 65, 200, 3, 2, 2, 2, 67, 206, 3, 2, 2,
	2, 69, 218, 3, 2, 2, 2, 71, 224, 3, 2, 2, 2, 73, 228, 3, 2, 2, 2, 75, 233,
	3, 2, 2, 2, 77, 238, 3, 2, 2, 2, 79, 244, 3, 2, 2, 2, 81, 250, 3, 2, 2,
	2, 83, 253, 3, 2, 2, 2, 85, 258, 3, 2, 2, 2, 87, 265, 3, 2, 2, 2, 89, 274,
	3, 2, 2, 2, 91, 280, 3, 2, 2, 2, 93, 95, 9, 2, 2, 2, 94, 93, 3, 2, 2, 2,
	95, 99, 3, 2, 2, 2, 96, 98, 9, 3, 2, 2, 97, 96, 3, 2, 2, 2, 98, 101, 3,
	2, 2, 2, 99, 97, 3, 2, 2, 2, 99, 100, 3, 2, 2, 2, 100, 4, 3, 2, 2, 2, 101,
	99, 3, 2, 2, 2, 102, 106, 7, 36, 2, 2, 103, 105, 11, 2, 2, 2, 104, 103,
	3, 2, 2, 2, 105, 108, 3, 2, 2, 2, 106, 107, 3, 2, 2, 2, 106, 104, 3, 2,
	2, 2, 107, 109, 3, 2, 2, 2, 108, 106, 3, 2, 2, 2, 109, 110, 7, 36, 2, 2,
	110, 6, 3, 2, 2, 2, 111, 113, 9, 4, 2, 2, 112, 111, 3, 2, 2, 2, 113, 114,
	3, 2, 2, 2, 114, 112, 3, 2, 2, 2, 114, 115, 3, 2, 2, 2, 115, 8, 3, 2, 2,
	2, 116, 117, 7, 63, 2, 2, 117, 10, 3, 2, 2, 2, 118, 119, 7, 45, 2, 2, 119,
	12, 3, 2, 2, 2, 120, 121, 7, 47, 2, 2, 121, 14, 3, 2, 2, 2, 122, 123, 7,
	44, 2, 2, 123, 16, 3, 2, 2, 2, 124, 125, 7, 49, 2, 2, 125, 18, 3, 2, 2,
	2, 126, 127, 7, 40, 2, 2, 127, 20, 3, 2, 2, 2, 128, 129, 7, 126, 2, 2,
	129, 22, 3, 2, 2, 2, 130, 131, 7, 128, 2, 2, 131, 24, 3, 2, 2, 2, 132,
	133, 7, 62, 2, 2, 133, 26, 3, 2, 2, 2, 134, 135, 7, 64, 2, 2, 135, 28,
	3, 2, 2, 2, 136, 137, 7, 63, 2, 2, 137, 138, 7, 63, 2, 2, 138, 30, 3, 2,
	2, 2, 139, 140, 7, 48, 2, 2, 140, 32, 3, 2, 2, 2, 141, 142, 7, 46, 2, 2,
	142, 34, 3, 2, 2, 2, 143, 144, 7, 61, 2, 2, 144, 36, 3, 2, 2, 2, 145, 146,
	7, 42, 2, 2, 146, 38, 3, 2, 2, 2, 147, 148, 7, 43, 2, 2, 148, 40, 3, 2,
	2, 2, 149, 150, 7, 125, 2, 2, 150, 42, 3, 2, 2, 2, 151, 152, 7, 127, 2,
	2, 152, 44, 3, 2, 2, 2, 153, 154, 7, 93, 2, 2, 154, 46, 3, 2, 2, 2, 155,
	156, 7, 95, 2, 2, 156, 48, 3, 2, 2, 2, 157, 158, 7, 79, 2, 2, 158, 159,
	7, 71, 2, 2, 159, 160, 7, 86, 2, 2, 160, 161, 7, 74, 2, 2, 161, 162, 7,
	81, 2, 2, 162, 163, 7, 70, 2, 2, 163, 50, 3, 2, 2, 2, 164, 165, 7, 85,
	2, 2, 165, 166, 7, 86, 2, 2, 166, 167, 7, 67, 2, 2, 167, 168, 7, 86, 2,
	2, 168, 169, 7, 75, 2, 2, 169, 170, 7, 69, 2, 2, 170, 52, 3, 2, 2, 2, 171,
	172, 7, 75, 2, 2, 172, 173, 7, 80, 2, 2, 173, 174, 7, 86, 2, 2, 174, 54,
	3, 2, 2, 2, 175, 176, 7, 68, 2, 2, 176, 177, 7, 81, 2, 2, 177, 178, 7,
	81, 2, 2, 178, 179, 7, 78, 2, 2, 179, 180, 7, 71, 2, 2, 180, 181, 7, 67,
	2, 2, 181, 182, 7, 80, 2, 2, 182, 56, 3, 2, 2, 2, 183, 184, 7, 86, 2, 2,
	184, 185, 7, 84, 2, 2, 185, 186, 7, 87, 2, 2, 186, 187, 7, 71, 2, 2, 187,
	58, 3, 2, 2, 2, 188, 189, 7, 80, 2, 2, 189, 190, 7, 87, 2, 2, 190, 191,
	7, 78, 2, 2, 191, 192, 7, 78, 2, 2, 192, 60, 3, 2, 2, 2, 193, 194, 7, 78,
	2, 2, 194, 195, 7, 71, 2, 2, 195, 196, 7, 86, 2, 2, 196, 62, 3, 2, 2, 2,
	197, 198, 7, 75, 2, 2, 198, 199, 7, 72, 2, 2, 199, 64, 3, 2, 2, 2, 200,
	201, 7, 89, 2, 2, 201, 202, 7, 74, 2, 2, 202, 203, 7, 75, 2, 2, 203, 204,
	7, 78, 2, 2, 204, 205, 7, 71, 2, 2, 205, 66, 3, 2, 2, 2, 206, 207, 7, 69,
	2, 2, 207, 208, 7, 81, 2, 2, 208, 209, 7, 80, 2, 2, 209, 210, 7, 85, 2,
	2, 210, 211, 7, 86, 2, 2, 211, 212, 7, 84, 2, 2, 212, 213, 7, 87, 2, 2,
	213, 214, 7, 69, 2, 2, 214, 215, 7, 86, 2, 2, 215, 216, 7, 81, 2, 2, 216,
	217, 7, 84, 2, 2, 217, 68, 3, 2, 2, 2, 218, 219, 7, 72, 2, 2, 219, 220,
	7, 75, 2, 2, 220, 221, 7, 71, 2, 2, 221, 222, 7, 78, 2, 2, 222, 223, 7,
	70, 2, 2, 223, 70, 3, 2, 2, 2, 224, 225, 7, 88, 2, 2, 225, 226, 7, 67,
	2, 2, 226, 227, 7, 84, 2, 2, 227, 72, 3, 2, 2, 2, 228, 229, 7, 69, 2, 2,
	229, 230, 7, 74, 2, 2, 230, 231, 7, 67, 2, 2, 231, 232, 7, 84, 2, 2, 232,
	74, 3, 2, 2, 2, 233, 234, 7, 88, 2, 2, 234, 235, 7, 81, 2, 2, 235, 236,
	7, 75, 2, 2, 236, 237, 7, 70, 2, 2, 237, 76, 3, 2, 2, 2, 238, 239, 7, 69,
	2, 2, 239, 240, 7, 78, 2, 2, 240, 241, 7, 67, 2, 2, 241, 242, 7, 85, 2,
	2, 242, 243, 7, 85, 2, 2, 243, 78, 3, 2, 2, 2, 244, 245, 7, 72, 2, 2, 245,
	246, 7, 67, 2, 2, 246, 247, 7, 78, 2, 2, 247, 248, 7, 85, 2, 2, 248, 249,
	7, 71, 2, 2, 249, 80, 3, 2, 2, 2, 250, 251, 7, 70, 2, 2, 251, 252, 7, 81,
	2, 2, 252, 82, 3, 2, 2, 2, 253, 254, 7, 71, 2, 2, 254, 255, 7, 78, 2, 2,
	255, 256, 7, 85, 2, 2, 256, 257, 7, 71, 2, 2, 257, 84, 3, 2, 2, 2, 258,
	259, 7, 84, 2, 2, 259, 260, 7, 71, 2, 2, 260, 261, 7, 86, 2, 2, 261, 262,
	7, 87, 2, 2, 262, 263, 7, 84, 2, 2, 263, 264, 7, 80, 2, 2, 264, 86, 3,
	2, 2, 2, 265, 266, 7, 72, 2, 2, 266, 267, 7, 87, 2, 2, 267, 268, 7, 80,
	2, 2, 268, 269, 7, 69, 2, 2, 269, 270, 7, 86, 2, 2, 270, 271, 7, 75, 2,
	2, 271, 272, 7, 81, 2, 2, 272, 273, 7, 80, 2, 2, 273, 88, 3, 2, 2, 2, 274,
	275, 7, 86, 2, 2, 275, 276, 7, 74, 2, 2, 276, 277, 7, 75, 2, 2, 277, 278,
	7, 85, 2, 2, 278, 90, 3, 2, 2, 2, 279, 281, 9, 5, 2, 2, 280, 279, 3, 2,
	2, 2, 281, 282, 3, 2, 2, 2, 282, 280, 3, 2, 2, 2, 282, 283, 3, 2, 2, 2,
	283, 284, 3, 2, 2, 2, 284, 285, 8, 46, 2, 2, 285, 92, 3, 2, 2, 2, 9, 2,
	94, 97, 99, 106, 114, 282, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "'='", "'+'", "'-'", "'*'", "'/'", "'&'", "'|'", "'~'",
	"'<'", "'>'", "'=='", "'.'", "','", "';'", "'('", "')'", "'{'", "'}'",
	"'['", "']'", "'METHOD'", "'STATIC'", "'INT'", "'BOOLEAN'", "'TRUE'", "'NULL'",
	"'LET'", "'IF'", "'WHILE'", "'CONSTRUCTOR'", "'FIELD'", "'VAR'", "'CHAR'",
	"'VOID'", "'CLASS'", "'FALSE'", "'DO'", "'ELSE'", "'RETURN'", "'FUNCTION'",
	"'THIS'",
}

var lexerSymbolicNames = []string{
	"", "ID", "STRING", "INTEGER", "ASSIGN", "PLUS", "MINUS", "ASTERISK", "SLASH",
	"AND", "OR", "NOT", "LT", "GT", "EQ", "DOT", "COMMA", "SEMICOLON", "LPAREN",
	"RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "METHOD", "STATIC",
	"INT", "BOOLEAN", "TRUE", "NULL", "LET", "IF", "WHILE", "CONSTRUCTOR",
	"FIELD", "VAR", "CHAR", "VOID", "CLASS", "FALSE", "DO", "ELSE", "RETURN",
	"FUNCTION", "THIS", "WHITESPACE",
}

var lexerRuleNames = []string{
	"ID", "STRING", "INTEGER", "ASSIGN", "PLUS", "MINUS", "ASTERISK", "SLASH",
	"AND", "OR", "NOT", "LT", "GT", "EQ", "DOT", "COMMA", "SEMICOLON", "LPAREN",
	"RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "METHOD", "STATIC",
	"INT", "BOOLEAN", "TRUE", "NULL", "LET", "IF", "WHILE", "CONSTRUCTOR",
	"FIELD", "VAR", "CHAR", "VOID", "CLASS", "FALSE", "DO", "ELSE", "RETURN",
	"FUNCTION", "THIS", "WHITESPACE",
}

type JackLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewJackLexer(input antlr.CharStream) *JackLexer {

	l := new(JackLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Jack.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JackLexer tokens.
const (
	JackLexerID          = 1
	JackLexerSTRING      = 2
	JackLexerINTEGER     = 3
	JackLexerASSIGN      = 4
	JackLexerPLUS        = 5
	JackLexerMINUS       = 6
	JackLexerASTERISK    = 7
	JackLexerSLASH       = 8
	JackLexerAND         = 9
	JackLexerOR          = 10
	JackLexerNOT         = 11
	JackLexerLT          = 12
	JackLexerGT          = 13
	JackLexerEQ          = 14
	JackLexerDOT         = 15
	JackLexerCOMMA       = 16
	JackLexerSEMICOLON   = 17
	JackLexerLPAREN      = 18
	JackLexerRPAREN      = 19
	JackLexerLBRACE      = 20
	JackLexerRBRACE      = 21
	JackLexerLBRACKET    = 22
	JackLexerRBRACKET    = 23
	JackLexerMETHOD      = 24
	JackLexerSTATIC      = 25
	JackLexerINT         = 26
	JackLexerBOOLEAN     = 27
	JackLexerTRUE        = 28
	JackLexerNULL        = 29
	JackLexerLET         = 30
	JackLexerIF          = 31
	JackLexerWHILE       = 32
	JackLexerCONSTRUCTOR = 33
	JackLexerFIELD       = 34
	JackLexerVAR         = 35
	JackLexerCHAR        = 36
	JackLexerVOID        = 37
	JackLexerCLASS       = 38
	JackLexerFALSE       = 39
	JackLexerDO          = 40
	JackLexerELSE        = 41
	JackLexerRETURN      = 42
	JackLexerFUNCTION    = 43
	JackLexerTHIS        = 44
	JackLexerWHITESPACE  = 45
)
